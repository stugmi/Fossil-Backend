# The X-Frame-Options header indicates whether a browser should be allowed
# to render a page within a frame or iframe.
add_header X-Frame-Options SAMEORIGIN always;

# MIME type sniffing security protection
#	There are very few edge cases where you wouldn't want this enabled.
add_header X-Content-Type-Options nosniff always;

# The X-XSS-Protection header is used by Internet Explorer version 8+
# The header instructs IE to enable its inbuilt anti-cross-site scripting filter.
add_header X-XSS-Protection "1; mode=block" always;

# with Content Security Policy (CSP) enabled (and a browser that supports it (http://caniuse.com/#feat=contentsecuritypolicy),
# you can tell the browser that it can only download content from the domains you explicitly allow
# CSP can be quite difficult to configure, and cause real issues if you get it wrong
# There is website that helps you generate a policy here http://cspisawesome.com/
#add_header Content-Security-Policy "style-src 'self' 'unsafe-inline'; always; style-src 'self' fonts.googleapis.com";
#add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' ssl.google-analytics.com assets.zendesk.com connect.facebook.net; img-src 'self' ssl.google-analytics.com s-static.ak.facebook.com assets.zendesk.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com assets.zendesk.com; font-src 'self' themes.googleusercontent.com; frame-src assets.zendesk.com www.facebook.com s-static.ak.facebook.com tautt.zendesk.com ajax.cloudflare.com; object-src 'none'";
add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' *.cloudflare.com; style-src 'self' 'unsafe-inline' *.googleapis.com *.gstatic.com; font-src 'self' data: https://fonts.googleapis.com *.gstatic.com;";


add_header Referrer-Policy no-referrer;
